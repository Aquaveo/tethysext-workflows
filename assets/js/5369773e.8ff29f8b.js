"use strict";(self.webpackChunkworkflows_extension=self.webpackChunkworkflows_extension||[]).push([[4470],{5801:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"tutorial/add_workflows_steps","title":"Add Workflows Steps","description":"After having created your new workflow type, you can begin adding steps to the workflow.","source":"@site/docs/tutorial/add_workflow_steps.md","sourceDirName":"tutorial","slug":"/tutorial/add_workflows_steps","permalink":"/tethysext-workflows/docs/tutorial/add_workflows_steps","draft":false,"unlisted":false,"editUrl":"https://github.com/Aquaveo/tethysext-workflows/edit/main/docs/docs/tutorial/add_workflow_steps.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"id":"add_workflows_steps","title":"Add Workflows Steps","sidebar_label":"Add Workflow Steps","excerpt":"Add workflow steps","sidebar_position":7},"sidebar":"documentationSidebar","previous":{"title":"Add Workflows Files","permalink":"/tethysext-workflows/docs/tutorial/add_workflows_files"},"next":{"title":"Add Workflow Jobs","permalink":"/tethysext-workflows/docs/tutorial/add_jobs"}}');var s=o(4848),a=o(8453);const r={id:"add_workflows_steps",title:"Add Workflows Steps",sidebar_label:"Add Workflow Steps",excerpt:"Add workflow steps",sidebar_position:7},l=void 0,i={},p=[{value:"Start from Previous Solution",id:"start-from-previous-solution",level:3},{value:"Add Input Steps",id:"add-input-steps",level:3},{value:"Try It Out",id:"try-it-out",level:3},{value:"Solution",id:"solution",level:3}];function d(t){const e={a:"a",code:"code",h3:"h3",img:"img",p:"p",pre:"pre",...(0,a.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:"After having created your new workflow type, you can begin adding steps to the workflow."}),"\n",(0,s.jsx)(e.h3,{id:"start-from-previous-solution",children:"Start from Previous Solution"}),"\n",(0,s.jsx)(e.p,{children:"If you wish to use the previous solution as a starting point:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/Aquaveo/tethysapp-workflows_tutorial.git\ncd tethysapp-workflows_tutorial\ngit checkout -b add-workflows-files-step add-workflows-files-step-complete\n"})}),"\n",(0,s.jsx)(e.h3,{id:"add-input-steps",children:"Add Input Steps"}),"\n",(0,s.jsx)(e.p,{children:"In order to add and test some workflow steps, you'll need to add a few new files."}),"\n",(0,s.jsxs)(e.p,{children:["Start by creating a new file called ",(0,s.jsx)(e.code,{children:"attributes.py"})," to your basic_workflow folder with the following contents:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:'title="/tethysapp/workflows_tutorial/workflows/basic_workflow/attributes.py"',children:'    import param\n\n\n    class PointAttributes(param.Parameterized):\n        point_name = param.String(\n            label="Name",\n            doc="Name of point that will be used to reference it in results.",\n            allow_None=False,  #: Required\n        )\n'})}),"\n",(0,s.jsxs)(e.p,{children:["Next, create a new file called ",(0,s.jsx)(e.code,{children:"step_params.py"})," with this code:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:'title="/tethysapp/workflows_tutorial/workflows/basic_workflow/step_params.py"',children:"import logging\n\nimport param\n\nlog = logging.getLogger(f'tethys.{__name__}')\n\n\nclass DatasetsParam(param.Parameterized):\n    \"\"\"\n    Param form that defines the form in the Routing Options step\n    \"\"\"\n    def __init__(self, *args, **kwargs):\n        # Pop these to avoid warning messages.\n        self._request = kwargs.pop('request', None)\n        self._session = kwargs.pop('session', None)\n        self._resource = kwargs.pop('resource', None)\n        super().__init__(*args, **kwargs)\n        self.set_data_options()\n\n    def set_data_options(self):\n        options = [\n            'Increasing Data', 'Decreasing Data', 'Random Data'\n        ]\n        default = []\n        self.param.add_parameter(\n            'datasets',\n            param.ListSelector(\n                label='Datasets for Plotting',\n                doc='Select one dataset to plot in your final results.',\n                default=default,\n                objects=options,\n                allow_None=False\n            )\n        )\n\n"})}),"\n",(0,s.jsx)(e.p,{children:"Next, you'll need to add a few imports"}),"\n",(0,s.jsxs)(e.p,{children:["Begin by adding this code to the beginning step of of your innermost ",(0,s.jsx)(e.code,{children:"__init__.py"})," file:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:'title="/tethysapp/workflows_tutorial/workflows/basic_workflow/__init__.py"',children:"    from ..workflow_base import WorkflowBase\n\n    # highlight-start\n    from tethysext.workflows.steps import SpatialInputStep, SpatialDatasetStep, TableInputStep, FormInputStep, SetStatusStep\n    from .attributes import PointAttributes\n    import pandas as pd\n    # highlight-end\n"})}),"\n",(0,s.jsx)(e.p,{children:"Next, add this code to your BasicWorkflow class:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",metastring:'title="/tethysapp/workflows_tutorial/workflows/basic_workflow/__init__.py"',children:"    class BasicWorkflow(WorkflowBase):\n        ...\n\n        # highlight-start\n        boundary_step = SpatialInputStep(\n            name='Boundary Input Step',\n            order=10,\n            help=\"Use the Point tool to define a boundary.\",\n            options={\n                'shapes': ['polygons', 'extents'],\n                'singular_name': 'Example Boundary',\n                'plural_name': 'Example Boundaries',\n                'allow_shapefile': True,\n                'allow_drawing': True\n            },\n            geoserver_name=geoserver_name,\n            map_manager=map_manager,\n            spatial_manager=spatial_manager,\n        )\n\n        workflow.steps.append(boundary_step)\n\n        point_step = SpatialInputStep(\n            name='Point In Boundary Step',\n            order=20,\n            help=\"Use the Point tool to define a location or locations in the boundary.\",\n            options={\n                'shapes': ['points'],\n                'singular_name': 'Location',\n                'plural_name': 'Locations',\n                'allow_shapefile': True,\n                'allow_drawing': True,\n                'attributes': PointAttributes()\n            },\n            geoserver_name=geoserver_name,\n            map_manager=map_manager,\n            spatial_manager=spatial_manager,\n        )\n        workflow.steps.append(point_step)\n        \n\n        spatial_dataset_step = SpatialDatasetStep(\n            name='Spatial Dataset Step',\n            order=30,\n            help='This step will be used to select a spatial dataset.',\n            options={\n                 'geometry_source': {\n                    SpatialDatasetStep.OPT_PARENT_STEP: {\n                        'match_attr': 'name',\n                        'match_value': point_step.name,\n                        'parent_field': 'geometry'\n                    }\n                },\n                'dataset_title': 'Transformations to Perform',\n                'template_dataset': pd.DataFrame(columns=['X','Y']),\n                'plot_columns': ('X', 'Y'),\n            },\n            geoserver_name=geoserver_name,\n            map_manager=map_manager,\n            spatial_manager=spatial_manager,\n        )\n\n        spatial_dataset_step.parents.append(point_step)\n        workflow.steps.append(spatial_dataset_step)\n\n        table_input_step = TableInputStep(\n            name='Table Input Step',\n            order=40,\n            help=\"Enter the following parameters for each dataset.\",\n            options={\n                'dataset_title': 'Table Input',\n                'read_only_columns': ['Soil Texture'],\n            }\n        )\n        workflow.steps.append(table_input_step)\n\n        dataset_input_step = FormInputStep(\n            name='Dataset Input Step',\n            order=50,\n            help=\"Select a dataset here\",\n            options={'param_class': 'tethysapp.workflows_tutorial.workflows.basic_workflow.step_params.DatasetsParam'},\n        )\n        workflow.steps.append(dataset_input_step)\n\n        set_status_step = SetStatusStep(\n            name='Set Status',\n            order=60,\n            help='Set the status of the workflow to ready to run.',\n            options={'status': 'ready'},\n        )\n        workflow.steps.append(set_status_step)\n        # highlight-end\n\n        return workflow\n"})}),"\n",(0,s.jsx)(e.h3,{id:"try-it-out",children:"Try It Out"}),"\n",(0,s.jsx)(e.p,{children:'Now, go back to your browser and add a new workflow. You should see "Begin" instead of "none" on the button to the right of your workflow\'s name. Click "Begin" and you should be taken to this view:'}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"Workflow Steps Showing",src:o(7542).A+"",width:"1917",height:"911"})}),"\n",(0,s.jsxs)(e.p,{children:["For more information on each of these and steps you can use in workflows, check out the steps documentation: ",(0,s.jsx)(e.a,{href:"/tethysext-workflows/docs/documentation/workflow_steps_documentation",children:"Workflow Steps Documentation"})]}),"\n",(0,s.jsx)(e.h3,{id:"solution",children:"Solution"}),"\n",(0,s.jsxs)(e.p,{children:["This concludes the Add Workflow Steps portion of the Tethys Workflows Extension Tutorial. You can view the solution on GitHub at ",(0,s.jsx)(e.a,{href:"https://github.com/Aquaveo/tethysapp-workflows_tutorial",children:"https://github.com/Aquaveo/tethysapp-workflows_tutorial"})," or clone it as follows:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"git clone https://github.com/Aquaveo/tethysapp-workflows_tutorial.git\ncd tethysapp-workflows_tutorial\ngit checkout -b add-workflow-step-step add-workflow-step-step-complete\n"})})]})}function u(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(d,{...t})}):d(t)}},7542:(t,e,o)=>{o.d(e,{A:()=>n});const n=o.p+"assets/images/added_workflow_steps_screenshot-b5ddf1ee4a266c34371d71dc571e4f41.png"},8453:(t,e,o)=>{o.d(e,{R:()=>r,x:()=>l});var n=o(6540);const s={},a=n.createContext(s);function r(t){const e=n.useContext(a);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:r(t.components),n.createElement(a.Provider,{value:e},t.children)}}}]);